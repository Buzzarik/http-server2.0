version: "3.5" #указываем версию
services:      #расписыванием нащи сервисы
  app:     #1 - сервис
    build: . #на каком образе строим
    #если надо собрать, то
    #build: path - где лежит DockerFile
    container_name: app2.0 #название контейнера
    ports:              #указываем порты
      - '8080:8080'
    #restart: unless-stopped #как будет происходить рестарт
    depends_on:   #зависимости без которых не будет запускаться сервис
      - app-db
      - pgadmin
      - app-numbers
    networks:    #в каких сетях работает
      - internet
      - appnet

  app-numbers:     #2 - сервис
    build: microservices/numbers #на каком образе строим
    container_name: app-numbers2.0 #название контейнера
    ports:              #указываем порты
      - '8081:8081'
    restart: unless-stopped
    #restart: unless-stopped #как будет происходить рестарт
    depends_on:   #зависимости без которых не будет запускаться сервис
      - app-db
      - pgadmin
    networks:    #в каких сетях работает
      - appnet

  app-db:
    image: postgres
    container_name: app-postgres2.0 #это имя для сервера
    restart: unless-stopped
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "1065"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - postgres-data2.0:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - appnet

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "user@habr.com"
      PGADMIN_DEFAULT_PASSWORD: "1065"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data2.0:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    networks:    #в каких сетях работает
      - internet
      - appnet

volumes:
  pgadmin-data2.0:
  postgres-data2.0:

networks:     #создаем сети
  internet:
    name: internet
    driver: bridge #тип сети
  appnet:
    name: appnet
    driver: bridge